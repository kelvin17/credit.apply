name: CI/CD-Build Docker Image, push it to ACR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.run_number }}

    steps:
    #step 1: checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4

    #setup env for compiling jar
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin' # See 'Supported distributions' for available options
        java-version: '17'
        cache: 'maven'

    #compiling jar
    - name: Build Spring Boot JAR
      run: mvn clean package -DskipTests

    #step 2: login to AZure
    # - name: Azure Login
    #   uses: azure/login@v2
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: Azure CLI script
    #   uses: azure/cli@v2
    #   with:
    #     azcliversion: latest
    #     inlineScript: |
    #       az account show

    #step 3: login to ACR
    - name: Login to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    #step 4: build image and tag it
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.ACR_LOGIN_SERVER }}/loanapply-springboot-app:${{ env.IMAGE_TAG}}

    #step 5: push image to ACR
    - name: Push image to ACR
      run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/loanapply-springboot-app:${{ env.IMAGE_TAG}}
